angular.module("templates").run(["$templateCache", function($templateCache) {$templateCache.put("dropdownNavigator/docs/demo.html","<div style=\"background-color: #222;\" data-ng-controller=\"DropdownDemoController\">\n    <dropdown-navigator data-navigator=\"navigator\"></dropdown-navigator>\n</div>");
$templateCache.put("hierarchicalMenu/docs/demo.html","<div data-ng-controller=\"HierarchicalMenuDemoController\">\n    <hierarchical-menu menu=\"dropdownMenu\"></hierarchical-menu>\n</div>\n<div class=\"clearfix\"></div>");
$templateCache.put("simpleDialog/docs/demo.html","<script type=\"text/ng-template\" id=\"confirm-content-template\">\n    <p>That you now the result of this equation?</p>\n    <label>2 + 2 = </label><input ng-model=\"parameter.value\" min=\"0\" max=\"99\" required ng-change=\"isValid()\"/>\n    <span ng-if=\"parameter.invalid\" class=\"label label-danger\">This can not be true!</span>\n</script>\n\n\n<div data-ng-controller=\"ConfirmDialogDemoController\">\n    Test a dialog here: <button class=\"btn btn-default\" ng-click=\"openDialog()\">Open dialog</button>\n</div>");
$templateCache.put("dropdownNavigator/docs/readme.md","`dropdownNavigator` is a directive to visualize a vertical, multi-hierarchical navigator.");
$templateCache.put("hierarchicalMenu/docs/readme.md","`hierarchicalMenu` is a directive for creating hierarchical menus.");
$templateCache.put("isis-ui-filter-input/docs/readme.md","`filterInput` is a directive built on ngTagsInput for working as a filter-control");
$templateCache.put("itemList/docs/readme.md","`itemList` renders content as a list-group with extra options. Depends on `ngTagsInput`.");
$templateCache.put("simpleDialog/docs/readme.md","`simpleDialog` is a service for quick creation of confirm dialogs. It is a wrapper around [Bootstrap modals](http://angular-ui.github.io/bootstrap)\nand inherits all of its options.\n\nThe dialog creation is invoked through the `open(options)` method.\n\n`simpleDialog`-specific options are:\n\n * `dialogTitle`\n * `dialogContentTemplate` - the body of the dialog. Url or id of Angular-template (eg. if preloaded)\n * `onOk` - callback on OK\n * `onCancel` - callback on Cancel\n * `validator` - a function, if set, invoked when OK is clicked. Needs to return `true` to close dialog and result OK.\n\n`controller` and `template` are used internally. Do not set in options unless you would like to extend default functionality.");}]);